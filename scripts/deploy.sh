#!/bin/bash

# üöÄ Script de D√©ploiement Automatique
# Chatbot Atelier Maintenance - Next.js + Firebase

set -e  # Arr√™ter en cas d'erreur

echo "üöÄ D√©marrage du d√©ploiement..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    log_error "package.json non trouv√©. Assurez-vous d'√™tre dans le r√©pertoire du projet."
    exit 1
fi

# V√©rifier que Git est initialis√©
if [ ! -d ".git" ]; then
    log_error "Git n'est pas initialis√©. Ex√©cutez 'git init' d'abord."
    exit 1
fi

# V√©rifier les d√©pendances
log_info "V√©rification des d√©pendances..."
if [ ! -d "node_modules" ]; then
    log_warning "node_modules non trouv√©. Installation des d√©pendances..."
    npm install
else
    log_success "D√©pendances d√©j√† install√©es"
fi

# V√©rifier la configuration Firebase
log_info "V√©rification de la configuration Firebase..."
if [ ! -f "src/lib/firebase.ts" ]; then
    log_error "Configuration Firebase manquante"
    exit 1
fi

# Build de test
log_info "Test du build..."
if npm run build; then
    log_success "Build r√©ussi"
else
    log_error "√âchec du build"
    exit 1
fi

# V√©rifier le statut Git
log_info "V√©rification du statut Git..."
if [ -n "$(git status --porcelain)" ]; then
    log_warning "Changements non commit√©s d√©tect√©s"
    echo "Changements d√©tect√©s :"
    git status --short
    
    read -p "Voulez-vous commiter ces changements ? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git add .
        git commit -m "üöÄ Auto-commit avant d√©ploiement"
        log_success "Changements commit√©s"
    else
        log_warning "D√©ploiement annul√©"
        exit 1
    fi
else
    log_success "Aucun changement non commit√©"
fi

# V√©rifier la branche
CURRENT_BRANCH=$(git branch --show-current)
log_info "Branche actuelle: $CURRENT_BRANCH"

if [ "$CURRENT_BRANCH" != "main" ] && [ "$CURRENT_BRANCH" != "master" ]; then
    log_warning "Vous n'√™tes pas sur la branche principale"
    read -p "Voulez-vous continuer sur la branche $CURRENT_BRANCH ? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_warning "D√©ploiement annul√©"
        exit 1
    fi
fi

# Push vers GitHub
log_info "Push vers GitHub..."
if git push origin $CURRENT_BRANCH; then
    log_success "Code pouss√© vers GitHub"
else
    log_error "√âchec du push vers GitHub"
    exit 1
fi

# V√©rifier si Vercel CLI est install√©
if command -v vercel &> /dev/null; then
    log_info "D√©ploiement via Vercel CLI..."
    if vercel --prod; then
        log_success "D√©ploiement Vercel r√©ussi"
    else
        log_warning "√âchec du d√©ploiement Vercel CLI"
        log_info "Le d√©ploiement se fera automatiquement via GitHub"
    fi
else
    log_info "Vercel CLI non install√©. Le d√©ploiement se fera automatiquement via GitHub"
fi

# Afficher les informations finales
log_success "üéâ D√©ploiement termin√© !"
echo ""
echo "üìã Prochaines √©tapes :"
echo "1. V√©rifiez le d√©ploiement sur Vercel Dashboard"
echo "2. Testez l'application en ligne"
echo "3. V√©rifiez les variables d'environnement"
echo "4. Configurez Firebase pour la production"
echo ""
echo "üîó Liens utiles :"
echo "- Vercel Dashboard: https://vercel.com/dashboard"
echo "- Firebase Console: https://console.firebase.google.com/"
echo "- GitHub Repository: $(git remote get-url origin)"
echo ""

# V√©rifier les variables d'environnement
log_info "V√©rification des variables d'environnement..."
if [ -f ".env.local" ]; then
    log_warning "Fichier .env.local d√©tect√© localement"
    echo "Assurez-vous que les variables sont configur√©es dans Vercel Dashboard"
else
    log_warning "Aucun fichier .env.local d√©tect√©"
    echo "Configurez les variables d'environnement dans Vercel Dashboard"
fi

log_success "Script de d√©ploiement termin√© ! üöÄ" 